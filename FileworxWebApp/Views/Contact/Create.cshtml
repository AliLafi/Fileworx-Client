@model FileworxWebApp.Models.ContactModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
@using (Html.BeginForm("Create", "Contact", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
{

    <div class="mb-3">
        @Html.Label("Name","Name")
        @Html.EditorFor(m=>m.Name,new {  htmlAttributes = new {@class = "form-control",required = string.Empty }})
        <div class="invalid-feedback">
            Name cannot be empty
        </div>
    </div>
    <div class="mb-3">
        @Html.Label("Description","Description")
        @Html.EditorFor(m=>m.Description,new {  htmlAttributes = new {@class = "form-control",required = string.Empty }})
        <div class="invalid-feedback">
            Description cannot be empty
        </div>
    </div>
    <div class="mb-3">
        <input type="checkbox" id="IsReadFile" name="IsReadFile"  onclick="checkFileReceive()" />
        @Html.Label("IsReadFile","File Reception")

        @Html.EditorFor(m=>m.ReceiveFilePath,new {  htmlAttributes = new {@class = "form-control",type = "hidden",placeholder = "Reception File Path"}})
    </div>
    <div class="mb-3">
        <input type="checkbox" id="IsWriteFile" name="IsWriteFile"  onclick="checkFileSend()" />
        @Html.Label("IsWriteFile","File Transmission")

        @Html.EditorFor(m=>m.SendFilePath,new {  htmlAttributes = new {@class = "form-control",type="hidden" , placeholder = "Transmission File Path"}})
    </div>

        <div class="mb-3">
        <input type="checkbox" id="IsWriteTelegram" name="IsWriteTelegram" onclick="checkTelegramSend()" />
        @Html.Label("IsWriteTelegram","Telegram Transmission")

        @Html.EditorFor(m=>m.TelegramUsername,new {  htmlAttributes = new {@class = "form-control",type="hidden" , placeholder = "Telegram username or group name" }})
    </div>


    <div class="mb-3">
        <input type="checkbox" id="IsReadFtp" name="IsReadFtp"  onclick="checkFtpReceive()" />
        @Html.Label("IsReadFtp","Ftp Reception")

        @Html.EditorFor(m=>m.ReceiveFtpPath,new {  htmlAttributes = new {@class = "form-control",type = "hidden", placeholder = "Reception Ftp server File Path"}})
    </div>

    <div class="mb-3">
        <input type="checkbox" id="IsWriteFtp" name="IsWriteFtp"  onclick="checkFtpSend()" />
        @Html.Label("IsWriteFtp","Ftp Transmission")

        @Html.EditorFor(m=>m.SendFtpPath,new {  htmlAttributes = new {@class = "form-control",type="hidden" ,placeholder = "Transmission Ftp server File Path"}})
    </div>
    <hr />
    <div class="mb-3">
        @Html.EditorFor(m=>m.Host,new {  htmlAttributes = new {@class = "form-control",type="hidden",placeholder="Ftp Host" }})
    </div>

    <div class="mb-3">
        @Html.EditorFor(m=>m.Username,new {  htmlAttributes = new {@class = "form-control",type="hidden",placeholder="Ftp UserName" }})
    </div>

    <div class="mb-3">
        @Html.EditorFor(m=>m.Password,new {  htmlAttributes = new {@class = "form-control",type="hidden",placeholder="Ftp Password" }})
    </div>

    @Html.Hidden("created",DateTime.Now)
    @Html.Hidden("ID","-1",new {  htmlAttributes = new {value = -1}})
    @Html.Hidden("classID","4",new {  htmlAttributes = new {value = 4}})
    @Html.Hidden("LastModifier",ViewBag.Modifier,new {  htmlAttributes = new {value = ViewBag.Modifier}})
    @Html.Hidden("Creator",ViewBag.Modifier,new {  htmlAttributes = new {value = ViewBag.Modifier}})
    @Html.Hidden("ModifyDate",DateTime.Now)
    ;
    @Html.Hidden("LastFileReceptionDate",DateTime.Now)
    ;
    @Html.Hidden("LastFtpReceptionDate",DateTime.Now)
    ;


    <div class="mb-3">
        <button type="submit" id="ContactBtn" class="btn btn-primary" disabled>Create</button>
    </div>

}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
