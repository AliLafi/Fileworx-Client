@model FileworxWebApp.Models.ContactModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Create</h1>
@using (Html.BeginForm("Edit", "Contact", FormMethod.Post, new { @class = "needs-validation", novalidate = "true" }))
{

    <div class="mb-3">
        @Html.Label("Name","Name")
        @Html.EditorFor(m=>m.Name,new {  htmlAttributes = new {@class = "form-control",required = string.Empty }})
        <div class="invalid-feedback">
            Name cannot be empty
        </div>
    </div>
    <div class="mb-3">
        @Html.Label("Description","Description")
        @Html.EditorFor(m=>m.Description,new {  htmlAttributes = new {@class = "form-control",required = string.Empty }})
        <div class="invalid-feedback">
            Description cannot be empty
        </div>
    </div>
    <div class="mb-3">
        @Html.CheckBoxFor(m=>m.IsReadFile,new {onclick = "checkFileReceive()"})
        @Html.Label("IsReadFile","File Reception")
    </div>
    <div class="mb-3">

        @if (Model.IsReadFile)
        {
            @Html.EditorFor(m=>m.ReceiveFilePath,new {  htmlAttributes = new {@class = "form-control"}})
        }
        else
        {
            @Html.EditorFor(m=>m.ReceiveFilePath,new {  htmlAttributes = new {@class = "form-control",type = "hidden"}})
        }
    </div>
    <div class="mb-3">
        @Html.CheckBoxFor(m=>m.IsWriteFile,new {onclick = "checkFileSend()"})
        @Html.Label("IsWriteFile","File Transmission")

    </div>
    <div class="mb-3">
        @if (Model.IsWriteFile)
        {
            @Html.EditorFor(m=>m.SendFilePath,new {  htmlAttributes = new {@class = "form-control" }})
        }
        else
        {
            @Html.EditorFor(m=>m.SendFilePath,new {  htmlAttributes = new {@class = "form-control",type="hidden" }})
        }
    </div>

    <div class="mb-3">
       @Html.CheckBoxFor(m=>m.IsWriteTelegram,new {onclick = "checkTelegramSend()"})
        @Html.Label("IsWriteTelegram","Telegram Transmission")

    </div>
        <div class="mb-3">
        @if (Model.IsWriteTelegram)
        {
            @Html.EditorFor(m=>m.TelegramUsername,new {  htmlAttributes = new {@class = "form-control" }})
        }
        else
        {
            @Html.EditorFor(m=>m.TelegramUsername,new {  htmlAttributes = new {@class = "form-control",type="hidden" }})
        }
    </div>

    <div class="mb-3">
        @Html.CheckBoxFor(m=>m.IsReadFtp,new {onclick = "checkFtpReceive()"})
        @Html.Label("IsReadFtp","Ftp Reception")

    </div>
    <div class="mb-3">
        @if (Model.IsReadFtp)
        {
            @Html.EditorFor(m=>m.ReceiveFtpPath,new {  htmlAttributes = new {@class = "form-control"}})
        }
        else
        {
            @Html.EditorFor(m=>m.ReceiveFtpPath,new {  htmlAttributes = new {@class = "form-control",type = "hidden"}})
        }
    </div>
    <div class="mb-3">
        @Html.CheckBoxFor(m=>m.IsWriteFtp,new {onclick = "checkFtpSend()"})
        @Html.Label("IsWriteFtp","Ftp Transmission")
    </div>
    <div class="mb-3">
        @if (Model.IsWriteFtp)
        {
            @Html.EditorFor(m=>m.SendFtpPath,new {  htmlAttributes = new {@class = "form-control" }})
        }
        else
        {
            @Html.EditorFor(m=>m.SendFtpPath,new {  htmlAttributes = new {@class = "form-control",type="hidden" }})
        }
    </div>
    <hr />
    if(Model.IsWriteFtp || Model.IsReadFtp)
    {
    <div class="mb-3">
        @Html.EditorFor(m=>m.Host,new {  htmlAttributes = new {@class = "form-control",placeholder="Ftp Host" }})
    </div>

    <div class="mb-3">
        @Html.EditorFor(m=>m.Username,new {  htmlAttributes = new {@class = "form-control",placeholder="Ftp UserName" }})
    </div>

    <div class="mb-3">
        @Html.EditorFor(m=>m.Password,new {  htmlAttributes = new {@class = "form-control",placeholder="Ftp Password" }})
    </div>
    }
    else
    {      
    <div class="mb-3">
        @Html.EditorFor(m=>m.Host,new {  htmlAttributes = new {@class = "form-control",type="hidden",placeholder="Ftp Host" }})
    </div>

    <div class="mb-3">
        @Html.EditorFor(m=>m.Username,new {  htmlAttributes = new {@class = "form-control",type="hidden",placeholder="Ftp UserName" }})
    </div>

    <div class="mb-3">
        @Html.EditorFor(m=>m.Password,new {  htmlAttributes = new {@class = "form-control",type="hidden",placeholder="Ftp Password" }})
    </div>
    }

    @Html.Hidden("created",DateTime.Now)
    @Html.Hidden("ID","-1",new {  htmlAttributes = new {value = -1}})
    @Html.Hidden("classID","4",new {  htmlAttributes = new {value = 4}})
    @Html.Hidden("LastModifier",ViewBag.Modifier,new {  htmlAttributes = new {value = ViewBag.Modifier}})
    @Html.Hidden("Creator",ViewBag.Modifier,new {  htmlAttributes = new {value = ViewBag.Modifier}})
    @Html.Hidden("ModifyDate",DateTime.Now);
    @Html.Hidden("LastFileReceptionDate",DateTime.Now);
    @Html.Hidden("LastFtpReceptionDate",DateTime.Now);


    <div class="mb-3">
        <button type="submit" id="ContactBtn" class="btn btn-primary" disabled>Save</button>
    </div>

}

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
